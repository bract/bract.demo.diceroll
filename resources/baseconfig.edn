{"parent.filenames"    ["bract/ring/default.edn"]
 ;; bract.core config
 "bract.core.inducers" [demo.diceroll.init/app-init                   ; initialize app
                        (bract.ring.inducer/apply-wrappers            ; apply Ring wrappers from bract.ring
                          $bract.ring.wrappers)
                        (bract.ring.inducer/apply-wrappers            ; apply Ring wrappers from application
                          [demo.diceroll.web/config-dump-wrapper])
                        (bract.ring.inducer/apply-middlewares         ; apply Ring middleware
                          [ring.middleware.params/wrap-params])
                        (bract.core.inducer/run-config-inducers       ; dev-mode inducers
                          "dev.inducers")
                        bract.core.inducer/invoke-launcher            ; launch app
                        ]
 "dev.inducers"        []  ; no-op for production
 "bract.core.launcher" demo.diceroll.init/launch
 ;; bract.ring config
 "bract.ring.params.normalize.function"  clojure.core/first
 ;; app config
 "dice.point.char"     "*"
 ;; web server config
 "http-kit.opts" {:port 3000}}
